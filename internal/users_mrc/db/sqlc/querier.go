// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.26.0

package db

import (
	"context"

	"github.com/jackc/pgx/v5/pgtype"
)

type Querier interface {
	AddUserToGroup(ctx context.Context, arg AddUserToGroupParams) (UserGroup, error)
	ChangePassword(ctx context.Context, arg ChangePasswordParams) error
	CountPremiumUsers(ctx context.Context) (int64, error)
	CountUsersByGroup(ctx context.Context, name string) (int64, error)
	CountUsersChurn30D(ctx context.Context) (int64, error)
	CreateGroup(ctx context.Context, arg CreateGroupParams) (Group, error)
	CreateInvite(ctx context.Context, arg CreateInviteParams) (Invite, error)
	CreateUser(ctx context.Context, arg CreateUserParams) (User, error)
	CreateUserGroup(ctx context.Context, arg CreateUserGroupParams) (UserGroup, error)
	CreateUserPhone(ctx context.Context, arg CreateUserPhoneParams) (Phone, error)
	DeleteGroup(ctx context.Context, id int32) error
	DeleteInvite(ctx context.Context, id pgtype.UUID) error
	DeletePhoneByUserId(ctx context.Context, userID pgtype.UUID) error
	DeleteUserByEmail(ctx context.Context, email string) error
	DeleteUserById(ctx context.Context, id pgtype.UUID) error
	FindUsers(ctx context.Context, arg FindUsersParams) ([]User, error)
	GetAllInvites(ctx context.Context) ([]Invite, error)
	GetAllUsers(ctx context.Context, arg GetAllUsersParams) ([]GetAllUsersRow, error)
	GetAllUsersAndRoles(ctx context.Context, arg GetAllUsersAndRolesParams) ([]GetAllUsersAndRolesRow, error)
	GetAllUsersByRole(ctx context.Context, arg GetAllUsersByRoleParams) ([]User, error)
	GetGroupByName(ctx context.Context, name string) (Group, error)
	GetGroupsByUserId(ctx context.Context, userID pgtype.UUID) ([]GetGroupsByUserIdRow, error)
	GetInviteByInviteCode(ctx context.Context, inviteCode pgtype.Text) (Invite, error)
	GetInvitesByUserId(ctx context.Context, createdByUserID pgtype.UUID) ([]Invite, error)
	GetOrdinaryUsersCount(ctx context.Context, name string) (int64, error)
	GetUserAndGroupsByEmail(ctx context.Context, email string) (GetUserAndGroupsByEmailRow, error)
	GetUserByEmail(ctx context.Context, email string) (User, error)
	GetUserById(ctx context.Context, id pgtype.UUID) (User, error)
	GetUserPhoneByUserId(ctx context.Context, userID pgtype.UUID) (Phone, error)
	HideUserByEmail(ctx context.Context, arg HideUserByEmailParams) error
	HideUserById(ctx context.Context, arg HideUserByIdParams) error
	LastTokenUpdate(ctx context.Context, id pgtype.UUID) error
	NewUsersLast24H(ctx context.Context) (int64, error)
	RemoveUserFromGroup(ctx context.Context, arg RemoveUserFromGroupParams) error
	SearchUsers(ctx context.Context, arg SearchUsersParams) ([]SearchUsersRow, error)
	UpdateGroup(ctx context.Context, arg UpdateGroupParams) (Group, error)
	UpdateInvite(ctx context.Context, arg UpdateInviteParams) (Invite, error)
	UpdateUserByEmail(ctx context.Context, arg UpdateUserByEmailParams) (User, error)
	UpdateUserById(ctx context.Context, arg UpdateUserByIdParams) (User, error)
	UpdateUserPhone(ctx context.Context, arg UpdateUserPhoneParams) (Phone, error)
	UserExists(ctx context.Context, email string) (bool, error)
	UserGrowthPerYear(ctx context.Context) ([]UserGrowthPerYearRow, error)
}

var _ Querier = (*Queries)(nil)
